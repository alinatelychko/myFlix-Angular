var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.081,1,0.489]],["body/components/AppComponent.html",[0,0.149,1,0.866,2,1.022,3,0.583,4,0.686,5,1.061,6,1.061,7,1.061,8,1.061,9,0.583,10,2.578,11,1.061,12,3.833,13,1.02,14,1.061,15,1.747,16,1.316,17,1.357,18,4.529,19,1.357,20,4.108,21,0.686,22,1.022,23,3.32,24,0.686,25,0.054,26,1.556,27,1.216,28,1.216,29,2.366,30,1.181,31,2.764,32,0.799,33,3.212,34,2.047,35,0.686,36,0.583,37,0.686,38,2.578,39,0.799,40,1.357,41,1.357,42,1.061,43,1.577,44,1.061,45,1.181,46,1.061,47,0.583,48,0.878,49,1.061,50,0.583,51,1.061,52,0.583,53,1.061,54,1.061,55,0.583,56,0.968,57,0.583,58,1.357,59,0.583,60,1.061,61,0.583,62,0.583,63,0.583,64,0.799,65,0.923,66,1.061,67,1.061,68,0.04,69,0.04]],["title/modules/AppModule.html",[70,1.169,71,1.552]],["body/modules/AppModule.html",[0,0.118,1,0.929,2,0.846,3,0.44,4,0.518,9,0.44,13,0.727,25,0.055,30,0.977,34,1.695,35,1.147,36,0.44,37,0.518,39,0.603,47,0.867,48,0.727,50,0.844,52,0.844,55,0.844,56,0.839,57,0.617,59,0.867,61,0.844,62,0.617,63,0.867,64,0.977,68,0.033,69,0.033,70,1.848,71,3.113,72,1.958,73,1.208,74,3.154,75,3.154,76,2.289,77,1.631,78,1.946,79,1.946,80,1.946,81,1.946,82,2.318,83,2.73,84,1.946,85,1.631,86,2.424,87,3.154,88,3.401,89,3.929,90,2.73,91,1.946,92,2.453,93,3.401,94,1.946,95,2.73,96,3.401,97,1.946,98,3.401,99,2.73,100,1.396,101,2.424,102,1.946,103,3.401,104,2.424,105,1.695,106,2.73,107,3.401,108,2.424,109,3.401,110,2.424,111,3.401,112,2.424,113,3.401,114,2.424,115,2.424,116,3.401,117,0.918,118,3.401,119,1.208,120,0.918,121,1.631,122,2.424,123,1.946,124,1.052,125,1.631,126,2.424,127,3.401,128,2.424,129,1.396,130,1.946,131,1.631,132,2.424,133,2.424,134,1.396,135,2.424,136,4.26,137,1.208,138,1.946,139,2.424,140,2.424,141,2.424,142,2.424,143,2.424,144,2.424]],["title/modules/AppRoutingModule.html",[70,1.169,82,1.343]],["body/modules/AppRoutingModule.html",[3,0.679,4,0.799,9,0.679,13,0.965,25,0.054,30,1.298,32,0.931,34,2.418,35,0.965,36,0.679,37,0.965,68,0.044,69,0.044,70,2.105,72,1.865,77,3.039,82,2.512,87,3.626,91,3.003,92,2.971,95,3.626,123,4.046,124,1.623,134,2.154,145,3.741,146,4.517,147,2.517,148,3.741]],["title/injectables/FetchApiDataService.html",[149,1.552,150,1.021]],["body/injectables/FetchApiDataService.html",[3,0.239,4,0.282,9,0.239,11,0.708,12,1.059,13,0.665,16,0.328,21,0.578,23,1.442,24,0.954,25,0.055,26,1.822,31,0.888,32,1.174,35,0.665,36,0.239,37,0.282,45,1.283,48,0.578,56,0.984,57,0.389,62,0.239,68,0.021,69,0.021,70,1.174,97,1.059,134,2.834,137,1.926,149,1.793,150,1.024,151,1.319,152,3.208,153,1.955,154,0.888,155,1.552,156,3.644,157,2.749,158,0.811,159,2.142,160,2.142,161,2.5,162,1.72,163,2.469,164,2.142,165,3.114,166,3.114,167,2.142,168,2.142,169,2.142,170,3.114,171,2.142,172,2.142,173,1.389,174,2.142,175,2.142,176,1.131,177,1.319,178,4.163,179,1.319,180,1.475,181,1.475,182,3.865,183,2.172,184,2.172,185,2.142,186,1.319,187,2.945,188,1.767,189,5.031,190,2.142,191,1.319,192,1.319,193,2.142,194,1.319,195,2.142,196,2.142,197,1.319,198,2.142,199,1.319,200,1.319,201,2.142,202,1.319,203,2.142,204,2.142,205,1.319,206,2.142,207,2.142,208,1.319,209,1.319,210,2.142,211,3.425,212,1.319,213,2.749,214,2.142,215,1.319,216,1.442,217,2.142,218,1.319,219,2.142,220,2.142,221,1.319,222,1.319,223,1.319,224,1.319,225,4.377,226,2.705,227,1.059,228,1.319,229,1.319,230,1.319,231,0.657,232,0.888,233,1.059,234,1.059,235,0.811,236,1.319,237,1.059,238,4.464,239,4.377,240,2.142,241,3.862,242,2.705,243,3.103,244,2.142,245,4.377,246,4.887,247,3.435,248,3.669,249,4.278,250,3.583,251,4.278,252,4.278,253,4.278,254,4.163,255,3.425,256,1.059,257,1.319,258,1.059,259,1.319,260,3.865,261,1.234,262,1.319,263,1.319,264,2.5,265,1.319,266,1.319,267,1.319,268,2.172,269,2.705,270,2.142,271,1.72,272,1.319,273,1.059,274,1.059,275,1.059,276,1.319,277,0.657,278,1.319,279,1.319,280,1.059,281,1.319,282,1.319,283,1.72,284,1.319,285,1.059,286,1.319,287,2.142,288,0.888,289,1.319,290,1.319,291,1.319,292,2.142,293,1.319,294,1.319,295,0.76,296,1.319,297,1.72,298,1.319,299,0.888,300,2.142,301,1.319,302,1.319,303,1.319,304,1.319,305,1.319,306,1.319,307,1.319,308,1.059,309,1.319,310,2.705,311,2.142,312,1.059,313,1.319,314,1.319,315,1.319,316,1.319,317,1.319,318,1.319,319,1.319,320,1.059,321,1.319,322,1.319,323,1.319,324,1.319,325,1.319,326,1.319,327,1.319,328,1.319,329,1.319]],["title/components/MovieCardComponent.html",[0,0.081,47,0.489]],["body/components/MovieCardComponent.html",[0,0.117,1,0.241,2,0.536,3,0.493,4,0.284,5,0.439,6,0.439,7,0.439,8,0.439,9,0.241,11,1.616,13,0.284,14,0.898,15,1.416,16,1.066,17,0.711,19,0.711,21,0.284,22,0.536,23,2.717,24,0.998,25,0.055,26,2.008,27,0.503,28,0.503,30,0.619,32,1.208,35,0.786,36,0.241,37,0.284,39,0.33,40,0.711,41,0.711,42,0.439,43,1.033,44,0.439,45,1.406,46,0.439,47,0.567,48,1.134,49,0.439,50,0.391,51,0.439,52,0.241,53,0.439,54,0.439,55,0.241,56,0.734,57,0.241,58,0.711,59,0.241,60,0.439,61,0.241,62,0.241,63,0.241,64,0.33,65,0.382,66,0.439,67,0.439,68,0.021,69,0.021,117,0.503,119,0.662,120,0.503,121,3.293,129,0.765,130,1.066,134,1.565,137,2.266,150,1.301,153,1.029,158,0.815,173,1.58,176,0.711,180,1.334,181,1.334,187,3.111,188,1.722,213,3.241,216,2.476,231,1.558,235,1.623,241,2.181,256,2.954,258,2.954,273,1.729,274,1.066,275,2.509,277,0.662,285,1.066,295,2.722,320,1.729,330,3.293,331,1.066,332,1.729,333,1.729,334,2.717,335,2.154,336,2.266,337,1.8,338,1.979,339,2.154,340,3.126,341,3.68,342,2.154,343,1.356,344,2.154,345,2.154,346,2.154,347,2.154,348,2.154,349,3.126,350,1.24,351,2.181,352,2.717,353,0.765,354,1.979,355,2.759,356,2.154,357,1.328,358,1.328,359,0.662,360,1.328,361,2.154,362,1.328,363,2.154,364,4.037,365,3.126,366,3.126,367,1.8,368,3.126,369,3.126,370,4.614,371,2.107,372,1.328,373,1.729,374,1.328,375,3.126,376,2.154,377,2.509,378,2.509,379,3.126,380,2.154,381,1.328,382,2.154,383,1.328,384,2.154,385,3.436,386,1.328,387,3.241,388,2.325,389,3.68,390,2.154,391,2.154,392,1.328,393,2.154,394,3.442,395,1.328,396,2.154,397,1.328,398,3.436,399,2.154,400,1.328,401,2.154,402,1.328,403,2.154,404,1.328,405,1.328,406,1.328,407,1.8,408,0.765,409,0.765,410,0.765,411,0.576,412,0.765,413,1.328,414,2.509,415,1.328,416,1.066,417,1.328,418,3.126,419,1.066,420,2.154,421,1.328,422,1.328,423,1.328,424,1.328,425,1.328,426,1.328,427,1.328,428,1.328,429,1.328,430,1.328,431,1.328,432,1.328,433,1.328,434,1.328,435,2.154,436,1.24,437,1.24,438,1.24,439,1.328,440,1.328,441,1.328,442,1.328,443,1.328,444,1.328,445,1.729,446,2.154,447,1.729,448,1.729,449,2.154]],["title/components/MovieInfoComponent.html",[0,0.081,50,0.489]],["body/components/MovieInfoComponent.html",[0,0.149,1,0.542,2,0.975,3,0.794,4,0.638,5,0.987,6,0.987,7,0.987,8,0.987,9,0.542,11,1.295,13,0.992,14,0.987,15,1.726,16,1.3,17,1.295,19,1.295,21,0.638,22,0.975,24,0.837,25,0.054,32,0.975,35,0.837,36,0.542,37,0.638,39,0.743,40,1.295,41,1.295,42,0.987,43,1.534,44,0.987,45,1.257,46,0.987,47,0.542,48,1.106,49,0.987,50,0.929,51,0.987,52,0.542,53,0.987,54,0.987,55,0.542,56,0.935,57,0.542,58,1.295,59,0.542,60,0.987,61,0.542,62,0.542,63,0.542,64,0.743,65,0.858,66,0.987,67,0.987,68,0.038,69,0.038,117,1.131,129,2.519,173,1.657,176,1.534,180,0.987,181,0.987,183,3.512,231,2.551,235,1.131,330,2.944,411,1.898,450,2.398,451,4.375,452,3.92,453,2.987,454,2.987,455,2.987,456,2.987,457,2.987,458,2.987,459,2.987,460,2.987,461,2.987,462,2.987,463,2.257,464,2.987]],["title/components/TopBarComponent.html",[0,0.081,52,0.489]],["body/components/TopBarComponent.html",[0,0.125,1,0.488,2,0.909,3,0.488,4,0.575,5,0.889,6,0.889,7,0.889,8,0.889,9,0.488,13,0.575,14,0.889,15,1.693,16,1.275,17,1.207,19,1.207,21,0.575,22,0.909,24,0.887,25,0.054,27,1.384,28,1.384,29,2.105,32,1.222,35,0.781,36,0.488,37,0.575,39,0.669,40,1.207,41,1.207,42,0.889,43,1.471,44,0.889,45,1.193,46,0.889,47,0.488,48,0.781,49,0.889,50,0.488,51,0.889,52,0.808,53,1.471,54,0.889,55,0.488,56,0.951,57,0.488,58,1.207,59,0.488,60,0.889,61,0.488,62,0.488,63,0.488,64,0.669,65,0.773,66,0.889,67,0.889,68,0.036,69,0.036,120,1.572,124,1.167,158,1.384,176,0.889,180,0.889,181,0.889,188,1.686,216,2.997,237,2.159,247,2.159,280,2.159,312,2.159,343,1.932,371,2.169,377,2.934,378,3.332,448,2.934,465,2.159,466,1.821,467,2.069,468,4.151,469,3.655,470,4.151,471,4.151,472,4.803,473,4.453,474,4.453,475,2.69,476,2.766,477,3.655,478,2.69,479,2.69,480,2.69,481,2.69,482,2.69,483,3.655,484,2.69,485,2.69,486,3.655,487,2.69,488,2.69,489,2.69,490,2.69,491,2.69,492,2.69,493,2.69,494,2.69,495,2.159,496,2.69,497,2.159,498,2.159]],["title/components/UserLoginFormComponent.html",[0,0.081,55,0.489]],["body/components/UserLoginFormComponent.html",[0,0.126,1,0.368,2,0.745,3,0.368,4,0.434,5,0.671,6,0.671,7,0.671,8,0.671,9,0.368,11,0.989,13,0.839,14,0.671,15,1.594,16,1.201,17,0.989,19,0.989,21,0.434,22,0.745,24,0.894,25,0.054,26,1.134,27,0.769,28,0.769,30,0.86,32,1.127,35,0.993,36,0.368,37,0.434,39,0.505,40,0.989,41,0.989,42,0.671,43,1.297,44,0.671,45,1.022,46,0.671,47,0.368,48,0.64,49,0.671,50,0.368,51,0.671,52,0.368,53,0.671,54,0.671,55,0.843,56,1.078,57,0.977,58,0.989,59,0.368,60,0.671,61,0.368,62,0.368,63,0.368,64,0.505,65,0.583,66,0.671,67,0.671,68,0.029,69,0.029,105,2.317,117,0.769,119,1.012,120,1.486,124,0.881,150,1.658,153,1.585,155,2.317,156,2.855,158,1.134,163,1.366,173,1.797,176,1.383,180,0.671,181,0.671,188,1.134,235,1.486,261,2.048,277,1.012,336,1.956,337,2.411,338,2.522,343,1.703,350,2.261,353,1.169,354,2.522,359,1.492,367,1.724,371,1.703,388,2.048,407,1.724,408,1.169,409,1.169,410,1.724,411,0.881,412,2.261,436,1.724,437,1.724,438,1.724,463,1.724,466,1.492,467,1.773,476,2.819,495,1.63,499,2.677,500,1.366,501,2.641,502,2.855,503,2.403,504,2.947,505,3.925,506,3.556,507,2.947,508,2.994,509,2.641,510,2.855,511,2.393,512,2.393,513,1.63,514,2.403,515,2.403,516,2.403,517,2.03,518,1.724,519,1.724,520,1.724,521,2.403,522,2.03,523,1.63,524,2.03,525,1.366,526,1.366,527,1.366,528,2.994,529,2.03,530,2.03,531,2.03,532,2.03,533,1.63,534,2.03,535,2.03,536,2.03,537,2.03,538,2.03,539,2.03,540,1.63,541,1.63,542,2.03,543,1.63,544,1.63]],["title/components/UserProfileComponent.html",[0,0.081,59,0.489]],["body/components/UserProfileComponent.html",[0,0.13,1,0.319,2,0.668,3,0.319,4,0.375,5,0.58,6,0.58,7,0.58,8,0.58,9,0.319,11,0.887,13,0.78,14,0.58,15,1.537,16,1.158,17,0.887,19,0.887,21,0.375,22,0.668,24,0.886,25,0.055,26,1.382,27,1.234,28,1.234,30,0.772,32,1.158,35,0.974,36,0.319,37,0.375,39,0.437,40,0.887,41,0.887,42,0.58,43,1.206,44,0.58,45,0.937,46,0.58,47,0.319,48,0.574,49,0.58,50,0.319,51,0.58,52,0.319,53,0.58,54,0.58,55,0.319,56,1.105,57,0.319,58,0.887,59,0.753,60,0.58,61,0.319,62,0.319,63,0.319,64,0.437,65,0.505,66,0.58,67,0.58,68,0.026,69,0.026,117,0.665,119,0.875,120,1.382,124,0.762,131,3.185,137,1.96,138,3.573,147,1.182,150,1.57,153,1.489,155,2.218,158,1.017,161,2.931,162,2.931,163,1.182,173,1.634,176,1.299,180,0.58,181,0.58,188,1.382,231,1.625,235,1.234,261,2.265,264,2.156,268,1.41,277,0.875,283,2.156,295,2.265,299,1.182,336,0.875,337,2.265,338,2.388,343,1.584,350,1.546,351,2.931,353,1.012,354,2.388,359,1.819,367,1.012,371,1.931,373,2.156,388,1.877,407,1.546,408,1.546,409,1.012,410,1.012,411,0.762,412,2.102,414,1.41,416,1.41,419,1.41,436,2.102,437,2.102,438,2.102,445,2.156,447,2.156,463,1.012,466,1.338,467,1.625,476,2.726,497,1.41,498,1.41,499,2.726,504,1.182,507,1.807,509,1.182,511,2.194,512,2.194,518,1.546,519,1.546,520,1.546,521,2.156,525,1.182,526,1.182,527,1.182,543,2.156,544,2.156,545,1.41,546,3.329,547,2.685,548,3.26,549,2.685,550,3.651,551,2.617,552,2.685,553,2.617,554,3.158,555,2.617,556,1.757,557,2.685,558,3.651,559,1.757,560,2.685,561,1.757,562,1.757,563,1.757,564,1.757,565,1.757,566,1.757,567,1.41,568,1.41,569,1.757,570,1.41,571,1.757,572,1.757,573,1.757,574,1.757,575,1.757,576,1.757,577,1.757,578,1.757,579,1.757,580,1.757,581,1.757,582,1.757,583,1.757,584,1.757,585,1.757,586,1.757,587,1.757,588,1.757,589,1.757,590,1.757,591,1.757,592,1.757,593,1.757,594,1.757,595,1.757,596,1.757,597,2.156,598,2.156,599,1.757,600,1.757,601,1.757,602,2.685,603,2.156,604,3.651,605,2.685]],["title/components/UserRegistrationFormComponent.html",[0,0.081,61,0.489]],["body/components/UserRegistrationFormComponent.html",[0,0.126,1,0.369,2,0.745,3,0.369,4,0.434,5,1.176,6,1.176,7,0.671,8,0.671,9,0.369,11,0.99,13,0.64,14,0.671,15,1.636,16,1.201,17,0.99,19,0.99,21,0.434,22,0.977,24,0.895,25,0.055,26,1.487,27,0.77,28,0.77,30,0.861,32,1.127,35,0.968,36,0.369,37,0.434,39,0.506,40,0.99,41,0.99,42,0.671,43,1.297,44,0.671,45,1.023,46,0.671,47,0.369,48,0.64,49,0.671,50,0.369,51,0.671,52,0.369,53,0.671,54,0.671,55,0.369,56,1.069,57,0.369,58,0.99,59,0.369,60,0.671,61,0.795,62,0.967,63,0.369,64,0.506,65,0.584,66,0.671,67,0.671,68,0.029,69,0.029,105,2.318,117,0.77,119,1.013,120,1.487,150,1.659,153,1.586,155,2.184,158,1.135,173,1.798,176,1.383,180,0.671,181,0.671,188,1.135,231,2.087,235,1.348,261,2.049,277,1.013,308,1.632,332,2.405,336,1.957,337,2.412,338,2.523,343,1.704,350,2.262,353,1.17,354,2.523,359,1.957,367,1.725,371,1.704,388,2.049,407,1.725,408,1.17,409,1.17,410,1.17,411,0.882,412,2.262,436,1.725,437,1.725,438,1.725,463,1.725,466,1.493,467,1.774,499,2.678,500,1.368,501,2.643,502,2.857,503,2.405,504,2.948,507,2.948,509,1.368,510,2.857,511,2.395,512,2.395,513,1.632,514,2.405,515,2.405,516,2.405,518,1.725,519,1.725,520,1.725,523,1.632,525,1.368,526,1.368,527,1.368,540,1.632,541,1.632,551,2.857,553,2.857,554,2.857,555,2.857,567,1.632,568,1.632,597,1.632,598,1.632,606,2.996,607,3.927,608,2.996,609,2.032,610,2.405,611,2.996,612,2.032,613,2.032,614,2.032,615,2.996,616,2.032,617,2.032,618,3.153,619,3.153]],["title/components/WelcomePageComponent.html",[0,0.081,63,0.489]],["body/components/WelcomePageComponent.html",[0,0.128,1,0.381,2,0.764,3,0.381,4,0.449,5,0.694,6,0.694,7,0.694,8,0.694,9,0.381,11,1.015,13,0.853,14,0.694,15,1.607,16,1.21,17,1.015,19,1.015,21,0.449,22,0.764,24,0.656,25,0.054,29,1.769,30,1.043,32,1.056,35,0.853,36,0.381,37,0.449,39,0.523,40,1.015,41,1.015,42,0.694,43,1.319,44,0.694,45,1.043,46,0.694,47,0.381,48,0.656,49,0.694,50,0.381,51,0.694,52,0.381,53,0.694,54,0.694,55,0.557,56,1.023,57,0.831,58,1.015,59,0.381,60,0.694,61,0.557,62,0.77,63,0.852,64,1.21,65,1.147,66,0.694,67,0.694,68,0.03,69,0.03,90,1.688,105,1.531,106,2.466,117,0.796,125,2.984,155,1.809,158,1.163,173,1.163,176,1.319,180,0.694,181,0.694,188,1.374,235,0.796,271,2.913,336,2.486,343,1.732,355,3.56,359,1.531,371,1.924,387,3.204,394,1.688,411,0.912,466,1.531,467,1.809,518,2.09,519,1.769,520,1.769,610,2.466,618,2.466,619,2.466,620,3.56,621,1.688,622,3.629,623,3.071,624,3.991,625,3.991,626,2.102,627,2.102,628,3.629,629,3.629,630,3.629,631,2.102,632,2.102,633,2.102,634,2.102,635,2.102,636,2.102,637,3.071,638,3.071,639,2.102,640,4.246,641,4.695,642,2.102,643,2.102,644,2.102,645,3.629,646,2.102,647,3.629,648,4.246,649,3.629,650,2.102,651,3.071,652,3.629,653,3.071,654,2.102,655,2.102,656,2.102,657,2.102,658,2.102,659,2.102,660,2.102,661,2.102,662,2.102,663,2.102,664,3.071,665,3.991,666,3.071,667,3.629,668,2.102,669,3.071,670,3.629,671,2.102,672,2.102,673,2.102,674,3.071,675,3.071,676,3.071,677,3.071,678,2.102,679,3.629,680,2.102,681,2.102,682,2.102,683,2.102,684,3.629,685,2.102,686,3.071,687,2.102,688,2.102,689,2.102,690,2.102,691,2.102,692,2.102,693,2.102,694,2.102,695,3.071,696,2.102,697,2.102,698,2.102,699,2.102]],["title/coverage.html",[700,2.938]],["body/coverage.html",[0,0.159,1,0.641,9,0.641,10,2.836,24,0.755,25,0.053,47,0.641,50,0.641,52,0.641,55,0.641,57,0.791,59,0.641,61,0.641,62,0.791,63,0.641,68,0.043,69,0.043,105,2.174,121,2.377,125,2.377,129,2.034,131,2.377,149,2.034,150,1.338,152,2.935,153,1.652,154,2.935,232,2.377,250,2.836,288,2.935,330,2.935,331,2.836,450,2.836,465,2.836,499,2.725,500,2.935,545,2.836,620,2.836,621,2.836,700,2.836,701,2.836,702,3.533,703,3.533,704,4.941,705,3.533,706,2.836,707,4.361,708,2.836,709,3.533,710,3.533,711,3.533,712,3.533,713,3.533,714,3.533,715,3.533,716,3.533,717,4.361,718,4.361,719,3.533,720,3.533,721,3.533,722,3.533,723,2.836]],["title/dependencies.html",[73,1.613,724,1.814]],["body/dependencies.html",[25,0.054,36,0.712,68,0.045,69,0.045,73,1.956,94,3.151,99,3.732,100,2.677,124,1.703,227,3.151,570,3.151,725,3.925,726,5.394,727,3.925,728,4.648,729,3.925,730,3.925,731,3.925,732,3.925,733,3.925,734,3.925,735,3.925,736,3.925]],["title/index.html",[21,0.483,737,1.814,738,1.814]],["body/index.html",[3,0.574,16,1.012,25,0.054,29,2.589,30,1.364,31,3.025,34,2.241,48,0.961,56,0.869,57,0.574,62,0.574,64,1.012,65,0.909,68,0.04,69,0.04,73,1.576,85,2.128,100,1.821,102,2.538,120,1.197,137,2.241,147,2.128,157,2.538,184,2.538,243,2.538,295,1.821,333,2.538,501,2.737,533,2.538,546,3.265,603,2.538,701,3.942,723,2.538,737,3.265,738,3.265,739,5.026,740,4.067,741,3.162,742,3.162,743,3.162,744,2.538,745,4.067,746,3.162,747,3.162,748,4.067,749,4.067,750,4.067,751,4.496,752,4.067,753,4.496,754,4.067,755,3.162,756,3.162,757,3.162,758,4.067,759,3.162,760,3.162,761,3.162,762,3.162,763,3.162,764,4.067,765,3.162,766,3.162,767,3.162,768,3.162,769,2.538,770,4.067,771,3.162,772,3.162,773,3.162,774,3.162,775,3.162,776,3.162,777,3.162,778,3.162,779,4.067,780,4.067,781,3.162,782,3.162,783,3.162,784,3.162,785,4.067,786,3.162,787,3.162,788,3.162,789,3.162,790,3.162,791,3.162,792,3.162,793,3.162,794,3.162,795,3.162]],["title/modules.html",[72,1.824]],["body/modules.html",[25,0.047,68,0.047,69,0.047,71,2.432,72,2.104,82,2.104,100,2.432,744,3.894,769,3.39,796,4.222,797,4.222,798,4.222]],["title/overview.html",[799,2.938]],["body/overview.html",[1,0.955,2,0.896,25,0.053,39,0.896,47,0.866,50,0.866,52,0.866,55,0.866,59,0.866,61,0.866,63,0.866,68,0.043,69,0.043,70,1.563,71,3.193,72,1.795,73,1.795,74,2.891,75,2.891,76,2.424,77,2.424,78,2.891,79,2.891,80,2.891,81,2.891,82,2.379,83,3.543,84,2.891,85,2.424,149,2.074,288,2.424,297,2.891,799,2.891,800,3.602,801,3.602]],["title/properties.html",[22,0.805,724,1.814]],["body/properties.html",[22,1.065,25,0.05,68,0.048,69,0.048,802,4.281,803,4.281]],["title/routes.html",[92,2.107]],["body/routes.html",[25,0.048,68,0.048,69,0.048,92,2.483]],["title/miscellaneous/variables.html",[804,1.814,805,2.598]],["body/miscellaneous/variables.html",[21,0.814,24,0.976,25,0.054,26,1.443,27,1.729,28,1.729,34,2.276,38,3.059,68,0.045,69,0.045,76,3.291,152,2.564,153,1.729,154,3.073,232,3.073,233,3.059,234,3.059,299,3.073,476,2.195,706,3.059,708,3.667,804,3.059,805,3.059,806,3.811,807,3.811,808,3.811,809,3.811,810,3.811,811,3.811,812,3.811,813,3.811,814,5.185,815,3.811,816,3.811]]],"invertedIndex":[["",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":288,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"overview.html":{}}}],["0.0.0",{"_index":803,"title":{},"body":{"properties.html":{}}}],["0.14.3",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["0.3s",{"_index":693,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["0.8",{"_index":674,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["0.9",{"_index":645,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["0/1",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["05t14:48:00.000z",{"_index":583,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["1",{"_index":297,"title":{},"body":{"injectables/FetchApiDataService.html":{},"overview.html":{}}}],["1/1",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":582,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["100",{"_index":704,"title":{},"body":{"coverage.html":{}}}],["100vh",{"_index":659,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["11",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["11/20",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["110",{"_index":672,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["128",{"_index":697,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["152",{"_index":673,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["15px",{"_index":678,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["17.1.0",{"_index":726,"title":{},"body":{"dependencies.html":{}}}],["17.1.1",{"_index":728,"title":{},"body":{"dependencies.html":{}}}],["185",{"_index":698,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["2",{"_index":800,"title":{},"body":{"overview.html":{}}}],["2.3.0",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["2.5em",{"_index":663,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["2/17",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["2/2",{"_index":705,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":438,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["2011",{"_index":581,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["20px",{"_index":669,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["255",{"_index":665,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["280px",{"_index":638,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["2nd",{"_index":303,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["3/3",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["30767e813dee.herokuapp.com",{"_index":234,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["31",{"_index":643,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["40px",{"_index":682,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["50px",{"_index":650,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["55",{"_index":714,"title":{},"body":{"coverage.html":{}}}],["6.2",{"_index":527,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["6/6",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["63",{"_index":644,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["7.8.0",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["7/8",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["72",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":801,"title":{},"body":{"overview.html":{}}}],["8/11",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":677,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["87",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":687,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["90",{"_index":647,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["_id",{"_index":593,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["account",{"_index":558,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["actual_component",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["added",{"_index":285,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["addfavorite",{"_index":339,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavorite(id",{"_index":361,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["addfavoritemovie",{"_index":159,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["addfavoritemovie(movieid",{"_index":185,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["adding",{"_index":274,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["adds",{"_index":363,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["again",{"_index":328,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["align",{"_index":651,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["allows",{"_index":743,"title":{},"body":{"index.html":{}}}],["angular",{"_index":30,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["angular.git",{"_index":762,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":725,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":727,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":570,"title":{},"body":{"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{}}}],["angular/compiler",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":36,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/material",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["angular/material/form",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":128,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["angular/platform",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":124,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":811,"title":{},"body":{"miscellaneous/variables.html":{}}}],["api",{"_index":153,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["apiurl",{"_index":232,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["app.component",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"index.html":{}}}],["app.component.html",{"_index":20,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.scss",{"_index":18,"title":{},"body":{"components/AppComponent.html":{}}}],["app.module",{"_index":778,"title":{},"body":{"index.html":{}}}],["app.routes",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appconfig",{"_index":708,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["appearance",{"_index":689,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["application",{"_index":34,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["applicationconfig",{"_index":808,"title":{},"body":{"miscellaneous/variables.html":{}}}],["appmodule",{"_index":71,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutes",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["approutingmodule",{"_index":82,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["array",{"_index":299,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["authorization",{"_index":251,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["available",{"_index":769,"title":{},"body":{"index.html":{},"modules.html":{}}}],["back",{"_index":277,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["backend",{"_index":516,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["background",{"_index":640,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["bad",{"_index":324,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["bar",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["bar'},{'name",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["bar.component.html",{"_index":469,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar.component.scss",{"_index":468,"title":{},"body":{"components/TopBarComponent.html":{}}}],["bar/bar.component",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["based",{"_index":741,"title":{},"body":{"index.html":{}}}],["bearer",{"_index":252,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["below",{"_index":776,"title":{},"body":{"index.html":{}}}],["better",{"_index":680,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["bio",{"_index":385,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["biography",{"_index":390,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["birthday",{"_index":555,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["blue",{"_index":676,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["body",{"_index":310,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["boolean",{"_index":216,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{}}}],["bootstrap",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["border",{"_index":684,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["bottom",{"_index":668,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["bound",{"_index":611,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["brings",{"_index":525,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["browse",{"_index":744,"title":{},"body":{"index.html":{},"modules.html":{}}}],["browser",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"modules.html":{}}}],["browser/animations",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["built",{"_index":742,"title":{},"body":{"index.html":{}}}],["button",{"_index":670,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["call",{"_index":238,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["called",{"_index":520,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["calls",{"_index":509,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["card",{"_index":333,"title":{},"body":{"components/MovieCardComponent.html":{},"index.html":{}}}],["card'},{'name",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["card.component",{"_index":122,"title":{},"body":{"modules/AppModule.html":{}}}],["card.component.html",{"_index":335,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.scss",{"_index":334,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts",{"_index":331,"title":{},"body":{"components/MovieCardComponent.html":{},"coverage.html":{}}}],["card.component.ts:111",{"_index":395,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:120",{"_index":402,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:141",{"_index":374,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:149",{"_index":362,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:165",{"_index":400,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:182",{"_index":381,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:25",{"_index":358,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:26",{"_index":360,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:27",{"_index":357,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:29",{"_index":356,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:32",{"_index":405,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:33",{"_index":406,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:34",{"_index":404,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:40",{"_index":383,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:53",{"_index":392,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:69",{"_index":386,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:83",{"_index":397,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card.component.ts:96",{"_index":372,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["card/movie",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"coverage.html":{}}}],["catcherror",{"_index":222,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["catcherror((error",{"_index":272,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["catcherror(this.handleerror",{"_index":245,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["cd",{"_index":763,"title":{},"body":{"index.html":{}}}],["center",{"_index":652,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["change",{"_index":431,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["changes",{"_index":280,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/TopBarComponent.html":{}}}],["check",{"_index":484,"title":{},"body":{"components/TopBarComponent.html":{}}}],["checks",{"_index":375,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["class",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["client",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"index.html":{}}}],["clone",{"_index":758,"title":{},"body":{"index.html":{}}}],["close",{"_index":463,"title":{},"body":{"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["cluster_appmodule",{"_index":78,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":321,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["color",{"_index":641,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["column",{"_index":655,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["comes",{"_index":578,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["command",{"_index":784,"title":{},"body":{"index.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["configuration",{"_index":815,"title":{},"body":{"miscellaneous/variables.html":{}}}],["console.error",{"_index":319,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.error('error",{"_index":273,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["console.error('some",{"_index":314,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.log(index",{"_index":296,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["console.log(response",{"_index":615,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["console.log(result",{"_index":535,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["console.log(this.movies",{"_index":422,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["console.log(userdetails",{"_index":240,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["const",{"_index":134,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["constructor",{"_index":176,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":460,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["constructor(data",{"_index":453,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["constructor(dialog",{"_index":626,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(fetchapidata",{"_index":353,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["constructor(http",{"_index":177,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["constructor(private",{"_index":237,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/TopBarComponent.html":{}}}],["constructor(public",{"_index":635,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["constructor(router",{"_index":475,"title":{},"body":{"components/TopBarComponent.html":{}}}],["content",{"_index":394,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["contents",{"_index":747,"title":{},"body":{"index.html":{}}}],["contributing",{"_index":752,"title":{},"body":{"index.html":{}}}],["contributions",{"_index":787,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":700,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":786,"title":{},"body":{"index.html":{}}}],["created",{"_index":526,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["current",{"_index":376,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["cursor",{"_index":690,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["custom_elements_schema",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["darker",{"_index":699,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["data",{"_index":231,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.content",{"_index":462,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["data.favoritemovies",{"_index":266,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service",{"_index":409,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["data.service.ts",{"_index":154,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["data.service.ts:108",{"_index":209,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:125",{"_index":200,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:141",{"_index":186,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:163",{"_index":215,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:169",{"_index":194,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:184",{"_index":192,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:198",{"_index":191,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:221",{"_index":197,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:226",{"_index":212,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:26",{"_index":179,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:36",{"_index":221,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:44",{"_index":218,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:52",{"_index":199,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:66",{"_index":208,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:80",{"_index":202,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.service.ts:94",{"_index":205,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["data.title",{"_index":461,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["data.title}}{{data.content",{"_index":464,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["dd",{"_index":588,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["declarations",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["declares",{"_index":142,"title":{},"body":{"modules/AppModule.html":{}}}],["declaring",{"_index":228,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["decorator",{"_index":332,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["decorators",{"_index":455,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["default",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":32,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["defines",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["delete",{"_index":291,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deleted",{"_index":601,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["deletefavoritemovie",{"_index":160,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deletefavoritemovie(movieid",{"_index":190,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["deletes",{"_index":557,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["deleteuser",{"_index":161,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["deleting",{"_index":294,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["dependencies",{"_index":73,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"index.html":{},"overview.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["details",{"_index":546,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["dialog",{"_index":336,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["dialogref",{"_index":504,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dialogs",{"_index":630,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["directed",{"_index":446,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["direction",{"_index":654,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["directive",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["directives",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["director",{"_index":256,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["directorname",{"_index":203,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["display",{"_index":411,"title":{},"body":{"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["displaying",{"_index":388,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["displays",{"_index":365,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["docs",{"_index":785,"title":{},"body":{"index.html":{}}}],["documentation",{"_index":701,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["download",{"_index":757,"title":{},"body":{"index.html":{}}}],["duration",{"_index":437,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["dynamic",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["ease",{"_index":694,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["edit",{"_index":289,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["edits",{"_index":560,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["edituser",{"_index":162,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["edituser(updateduser",{"_index":193,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["element",{"_index":41,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["email",{"_index":554,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["en",{"_index":589,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["endpoint",{"_index":239,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error",{"_index":213,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["error('something",{"_index":323,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error(error.error.errors[0].msg",{"_index":318,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error",{"_index":311,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error.errors",{"_index":317,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.error.message",{"_index":316,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["error.status",{"_index":322,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["errorevent",{"_index":313,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["event",{"_index":490,"title":{},"body":{"components/TopBarComponent.html":{}}}],["event.url.includes('/welcome",{"_index":494,"title":{},"body":{"components/TopBarComponent.html":{}}}],["explore",{"_index":773,"title":{},"body":{"index.html":{}}}],["export",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["exports",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extraction",{"_index":309,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata",{"_index":164,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["extractresponsedata(res",{"_index":196,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["fails",{"_index":281,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["failure",{"_index":369,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["false",{"_index":378,"title":{},"body":{"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{}}}],["favorite",{"_index":295,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["favorite_border",{"_index":449,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["favoritemovies",{"_index":351,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["favorites",{"_index":275,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["favourite",{"_index":263,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["feel",{"_index":788,"title":{},"body":{"index.html":{}}}],["fetch",{"_index":408,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidata",{"_index":337,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["fetchapidataservice",{"_index":150,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["fetches",{"_index":373,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["fetching",{"_index":553,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["field",{"_index":115,"title":{},"body":{"modules/AppModule.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["flex",{"_index":653,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["folder",{"_index":603,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["following",{"_index":783,"title":{},"body":{"index.html":{}}}],["follows",{"_index":775,"title":{},"body":{"index.html":{}}}],["font",{"_index":661,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["form",{"_index":501,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"index.html":{}}}],["form'},{'name",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["form.component",{"_index":106,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{}}}],["form.component.html",{"_index":503,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.scss",{"_index":502,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts",{"_index":500,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["form.component.ts:29",{"_index":608,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:30",{"_index":508,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:40",{"_index":613,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:41",{"_index":612,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:42",{"_index":523,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:43",{"_index":522,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:44",{"_index":524,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:50",{"_index":609,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["form.component.ts:52",{"_index":517,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["form.component.ts:59",{"_index":513,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["form/user",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["format",{"_index":580,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formatdate",{"_index":569,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formatdate(this.user.birthday",{"_index":585,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["formsmodule",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":301,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["free",{"_index":789,"title":{},"body":{"index.html":{}}}],["function",{"_index":359,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["generate",{"_index":781,"title":{},"body":{"index.html":{}}}],["generated",{"_index":779,"title":{},"body":{"index.html":{}}}],["genre",{"_index":258,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["genrename",{"_index":206,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getallmovies",{"_index":165,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getfavoritemovies",{"_index":166,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getmovies",{"_index":340,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["getonedirector",{"_index":167,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonedirector(directorname",{"_index":201,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonegenre",{"_index":168,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonegenre(genrename",{"_index":204,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonemovie",{"_index":169,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getonemovie(title",{"_index":207,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getoneuser",{"_index":170,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["getting",{"_index":737,"title":{"index.html":{}},"body":{"index.html":{}}}],["getuser",{"_index":550,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["git",{"_index":760,"title":{},"body":{"index.html":{}}}],["given",{"_index":382,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["goes",{"_index":532,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["graph",{"_index":798,"title":{},"body":{"modules.html":{}}}],["h1",{"_index":660,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["handleerror",{"_index":171,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["handleerror(error",{"_index":210,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["happened",{"_index":325,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["headers",{"_index":249,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["height",{"_index":658,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["here",{"_index":533,"title":{},"body":{"components/UserLoginFormComponent.html":{},"index.html":{}}}],["hide",{"_index":491,"title":{},"body":{"components/TopBarComponent.html":{}}}],["hook",{"_index":519,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["hover",{"_index":695,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["html",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["http",{"_index":182,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["http://localhost:4200",{"_index":770,"title":{},"body":{"index.html":{}}}],["httpclient",{"_index":178,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpclientmodule",{"_index":96,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":211,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["httpheaders",{"_index":225,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["https://github.com/alinatelychko/myflix",{"_index":761,"title":{},"body":{"index.html":{}}}],["https://movieapicf",{"_index":233,"title":{},"body":{"injectables/FetchApiDataService.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":370,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["identifier",{"_index":702,"title":{},"body":{"coverage.html":{}}}],["implemented",{"_index":534,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["implements",{"_index":466,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["import",{"_index":35,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["imports",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["includes",{"_index":809,"title":{},"body":{"miscellaneous/variables.html":{}}}],["increased",{"_index":679,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["index",{"_index":21,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["info'},{'name",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["info.component",{"_index":130,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{}}}],["info.component.html",{"_index":452,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["info.component.scss",{"_index":451,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["info.component.ts",{"_index":450,"title":{},"body":{"components/MovieInfoComponent.html":{},"coverage.html":{}}}],["info.component.ts:20",{"_index":454,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["info.component.ts:28",{"_index":457,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["info/movie",{"_index":129,"title":{},"body":{"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"coverage.html":{}}}],["information",{"_index":389,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["initialization",{"_index":521,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["initialized",{"_index":610,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["inject",{"_index":458,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["inject(mat_dialog_data",{"_index":456,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["injectable",{"_index":149,"title":{"injectables/FetchApiDataService.html":{}},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"overview.html":{}}}],["injectables",{"_index":151,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["injected",{"_index":183,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieInfoComponent.html":{}}}],["input",{"_index":407,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["inputs",{"_index":350,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["install",{"_index":764,"title":{},"body":{"index.html":{}}}],["installation",{"_index":749,"title":{},"body":{"index.html":{}}}],["installed",{"_index":756,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":312,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/TopBarComponent.html":{}}}],["interact",{"_index":774,"title":{},"body":{"index.html":{}}}],["isfavorite",{"_index":341,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavoritebyid",{"_index":342,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavoritebyid(movieid",{"_index":380,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["isfavoritemovie",{"_index":172,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["isfavoritemovie(movieid",{"_index":214,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["isloggedin",{"_index":470,"title":{},"body":{"components/TopBarComponent.html":{}}}],["isostring",{"_index":579,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["issues",{"_index":791,"title":{},"body":{"index.html":{}}}],["item",{"_index":300,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["items",{"_index":656,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["json.parse(localstorage.getitem('user",{"_index":260,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["json.stringify(result",{"_index":596,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json.stringify(user",{"_index":269,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["justify",{"_index":657,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["larger",{"_index":683,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["last",{"_index":284,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["later",{"_index":329,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["legend",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"overview.html":{}}}],["license",{"_index":753,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":793,"title":{},"body":{"index.html":{}}}],["lifecycle",{"_index":518,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["list",{"_index":364,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["local",{"_index":278,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["localstorage.clear",{"_index":498,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.getitem('token",{"_index":247,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/TopBarComponent.html":{}}}],["localstorage.getitem('username",{"_index":262,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["localstorage.setitem('token",{"_index":538,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["localstorage.setitem('user",{"_index":268,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.setitem('username",{"_index":536,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logged",{"_index":485,"title":{},"body":{"components/TopBarComponent.html":{}}}],["logic",{"_index":530,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["login",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["logindata",{"_index":506,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["loginuser",{"_index":505,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["logout",{"_index":472,"title":{},"body":{"components/TopBarComponent.html":{}}}],["main",{"_index":90,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{}}}],["make",{"_index":184,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["making",{"_index":156,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{}}}],["manage",{"_index":746,"title":{},"body":{"index.html":{}}}],["management",{"_index":547,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["map",{"_index":223,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map((data",{"_index":265,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["map(this.extractresponsedata",{"_index":254,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["margin",{"_index":667,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["mat_dialog_data",{"_index":459,"title":{},"body":{"components/MovieInfoComponent.html":{}}}],["matbuttonmodule",{"_index":109,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":355,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["matdialogmodule",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":507,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["material",{"_index":628,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["matformfieldmodule",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["maticonmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":354,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["matsnackbarmodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["means",{"_index":305,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["message",{"_index":368,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["metadata",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["method",{"_index":528,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["methods",{"_index":158,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["miscellaneous",{"_index":804,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mit",{"_index":795,"title":{},"body":{"index.html":{}}}],["mm",{"_index":587,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["modal",{"_index":541,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["module",{"_index":70,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"overview.html":{}}}],["modules",{"_index":72,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["movie",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["movie.director.name",{"_index":447,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["movie.title",{"_index":445,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["moviecardcomponent",{"_index":47,"title":{"components/MovieCardComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movieid",{"_index":187,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["movieinfocomponent",{"_index":50,"title":{"components/MovieInfoComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["movies",{"_index":137,"title":{},"body":{"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["movies/director",{"_index":257,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["movies/genre",{"_index":259,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["myflix",{"_index":29,"title":{},"body":{"components/AppComponent.html":{},"components/TopBarComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["name",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["navigate",{"_index":772,"title":{},"body":{"index.html":{}}}],["navigationend",{"_index":483,"title":{},"body":{"components/TopBarComponent.html":{}}}],["navy",{"_index":646,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["new",{"_index":250,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{}}}],["ng",{"_index":767,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":95,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngoninit",{"_index":343,"title":{},"body":{"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["node.js",{"_index":754,"title":{},"body":{"index.html":{}}}],["non",{"_index":306,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["none",{"_index":685,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["notification",{"_index":366,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["notifications",{"_index":412,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["notify",{"_index":429,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["npm",{"_index":765,"title":{},"body":{"index.html":{}}}],["object",{"_index":816,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observable",{"_index":189,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["occurred",{"_index":315,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["ok",{"_index":436,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["one",{"_index":255,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["onfavoritetoggle",{"_index":352,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["oninit",{"_index":467,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opacity",{"_index":648,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["open",{"_index":771,"title":{},"body":{"index.html":{}}}],["opendirector",{"_index":344,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opendirector(name",{"_index":384,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opengenre",{"_index":345,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opengenre(name",{"_index":391,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opening",{"_index":629,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openmovieinfodialog",{"_index":346,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openmovieinfodialog(title",{"_index":393,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opens",{"_index":387,"title":{},"body":{"components/MovieCardComponent.html":{},"components/WelcomePageComponent.html":{}}}],["opensynopsis",{"_index":347,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["opensynopsis(description",{"_index":396,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["openuserlogindialog",{"_index":624,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["openuserregistrationdialog",{"_index":625,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["optional",{"_index":181,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["otherwise",{"_index":379,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["out",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":799,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":724,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":649,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page",{"_index":65,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["page.component",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["page.component.html",{"_index":623,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.scss",{"_index":622,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts",{"_index":621,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["page.component.ts:23",{"_index":627,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:31",{"_index":634,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:37",{"_index":631,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:45",{"_index":633,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page.component.ts:56",{"_index":632,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["page/welcome",{"_index":125,"title":{},"body":{"modules/AppModule.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["param",{"_index":235,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["parameter",{"_index":304,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["parameters",{"_index":180,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["parent",{"_index":430,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["password",{"_index":512,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["path",{"_index":136,"title":{},"body":{"modules/AppModule.html":{}}}],["pathmatch",{"_index":140,"title":{},"body":{"modules/AppModule.html":{}}}],["permanently",{"_index":605,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["person",{"_index":448,"title":{},"body":{"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{}}}],["pipe",{"_index":253,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["please",{"_index":326,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["pointer",{"_index":691,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["prefix",{"_index":141,"title":{},"body":{"modules/AppModule.html":{}}}],["prerequisites",{"_index":748,"title":{},"body":{"index.html":{}}}],["private",{"_index":163,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile",{"_index":138,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["profile'},{'name",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["profile.component",{"_index":132,"title":{},"body":{"modules/AppModule.html":{}}}],["profile.component.html",{"_index":549,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.scss",{"_index":548,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":545,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:104",{"_index":556,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:33",{"_index":566,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:34",{"_index":563,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":552,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:48",{"_index":564,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":565,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:59",{"_index":562,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:67",{"_index":561,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:85",{"_index":559,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["project",{"_index":739,"title":{},"body":{"index.html":{}}}],["properties",{"_index":22,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"properties.html":{}}}],["property",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"miscellaneous/variables.html":{}}}],["provide",{"_index":230,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["provideanimations",{"_index":814,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providedin",{"_index":236,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["provider",{"_index":810,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providerouter(routes",{"_index":813,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":76,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["provides",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["public",{"_index":173,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["pull",{"_index":792,"title":{},"body":{"index.html":{}}}],["radius",{"_index":686,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["redirectto",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["reference",{"_index":510,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["registered",{"_index":616,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registeruser",{"_index":607,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["registration",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"index.html":{}}}],["related",{"_index":812,"title":{},"body":{"miscellaneous/variables.html":{}}}],["remove",{"_index":283,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["removed",{"_index":441,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefavorite",{"_index":348,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removefavorite(id",{"_index":399,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removes",{"_index":401,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["removing",{"_index":443,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["repository",{"_index":759,"title":{},"body":{"index.html":{}}}],["requests",{"_index":157,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["res",{"_index":198,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["reset",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resp",{"_index":421,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["resp.filter((m",{"_index":592,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["response",{"_index":308,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserRegistrationFormComponent.html":{}}}],["responsetype",{"_index":270,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["responsible",{"_index":514,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["result",{"_index":543,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["result.token",{"_index":539,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["result.user.username",{"_index":537,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["results",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":241,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["returns",{"_index":188,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["rgba(0",{"_index":642,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["rgba(255",{"_index":664,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["rgba(41",{"_index":696,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["rgba(46",{"_index":671,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["roll",{"_index":276,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["root",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{}}}],["root'},{'name",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["rounded",{"_index":688,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["route",{"_index":488,"title":{},"body":{"components/TopBarComponent.html":{}}}],["router",{"_index":476,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["routermodule",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(approutes",{"_index":144,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(routes",{"_index":148,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routes",{"_index":92,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"routes.html":{}}}],["routing",{"_index":146,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["run",{"_index":782,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":227,"title":{},"body":{"injectables/FetchApiDataService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":224,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["schemas",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["selector",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["sending",{"_index":515,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["serve",{"_index":768,"title":{},"body":{"index.html":{}}}],["service",{"_index":155,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["showtopbar",{"_index":471,"title":{},"body":{"components/TopBarComponent.html":{}}}],["sign",{"_index":618,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["size",{"_index":662,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["sky",{"_index":675,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["snack",{"_index":511,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["snackbar",{"_index":338,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["spacing",{"_index":681,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["specifying",{"_index":606,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["splice",{"_index":298,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["src",{"_index":777,"title":{},"body":{"index.html":{}}}],["src/.../app.config.ts",{"_index":807,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../fetch",{"_index":806,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:25",{"_index":33,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":706,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/app.module.ts",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/app.routes.ts",{"_index":145,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/bar/bar.component.ts",{"_index":465,"title":{},"body":{"components/TopBarComponent.html":{},"coverage.html":{}}}],["src/app/bar/bar.component.ts:16",{"_index":482,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/bar/bar.component.ts:17",{"_index":477,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/bar/bar.component.ts:24",{"_index":479,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/bar/bar.component.ts:34",{"_index":480,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/bar/bar.component.ts:38",{"_index":481,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/bar/bar.component.ts:42",{"_index":478,"title":{},"body":{"components/TopBarComponent.html":{}}}],["src/app/fetch",{"_index":152,"title":{},"body":{"injectables/FetchApiDataService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/movie",{"_index":330,"title":{},"body":{"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"coverage.html":{}}}],["src/app/user",{"_index":499,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"coverage.html":{}}}],["src/app/welcome",{"_index":620,"title":{},"body":{"components/WelcomePageComponent.html":{},"coverage.html":{}}}],["start",{"_index":766,"title":{},"body":{"index.html":{}}}],["started",{"_index":738,"title":{"index.html":{}},"body":{"index.html":{}}}],["statements",{"_index":703,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":320,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["storage",{"_index":279,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["string",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["structure",{"_index":751,"title":{},"body":{"index.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["styleurls",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["submit",{"_index":790,"title":{},"body":{"index.html":{}}}],["subscribe",{"_index":487,"title":{},"body":{"components/TopBarComponent.html":{}}}],["success",{"_index":367,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["successful",{"_index":531,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["successfully",{"_index":598,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["support",{"_index":796,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":755,"title":{},"body":{"index.html":{}}}],["svg",{"_index":797,"title":{},"body":{"modules.html":{}}}],["synopsis",{"_index":398,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["table",{"_index":723,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["templateurl",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["text",{"_index":271,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/WelcomePageComponent.html":{}}}],["this.addfavorite(movieid",{"_index":427,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(movieinfocomponent",{"_index":418,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.dialog.open(userloginformcomponent",{"_index":639,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialog.open(userregistrationformcomponent",{"_index":636,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["this.dialogref.close",{"_index":540,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.favoritemovies",{"_index":414,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.favoritemovies.filter((movieid",{"_index":442,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.filter(id",{"_index":426,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.includes(movieid",{"_index":444,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.includes(this.movie._id",{"_index":433,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.push(id",{"_index":439,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.favoritemovies.push(movieid",{"_index":428,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.addfavoritemovie(id).subscribe",{"_index":434,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deletefavoritemovie(id).subscribe",{"_index":440,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.fetchapidata.deleteuser().subscribe((result",{"_index":600,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.edituser(this.userdata).subscribe((result",{"_index":595,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getallmovies().subscribe((resp",{"_index":419,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.getoneuser",{"_index":416,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.fetchapidata.userlogin(this.logindata).subscribe((result",{"_index":529,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.fetchapidata.userregistration(this.userdata).subscribe((response",{"_index":614,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.getmovies",{"_index":415,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.getuser",{"_index":571,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.handleerror(error",{"_index":286,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.delete(apiurl",{"_index":292,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.get(apiurl",{"_index":248,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.post(apiurl",{"_index":242,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.http.put(apiurl",{"_index":290,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["this.isfavorite",{"_index":424,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.isloggedin",{"_index":486,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.movie._id",{"_index":423,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.movies",{"_index":420,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.onfavoritetoggle",{"_index":413,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.onfavoritetoggle(movieid",{"_index":432,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.removefavorite(movieid",{"_index":425,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":489,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.router.navigate(['movies",{"_index":495,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{}}}],["this.router.navigate(['profile",{"_index":496,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.router.navigate(['welcome",{"_index":497,"title":{},"body":{"components/TopBarComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.showtopbar",{"_index":493,"title":{},"body":{"components/TopBarComponent.html":{}}}],["this.snackbar.open('logged",{"_index":542,"title":{},"body":{"components/UserLoginFormComponent.html":{}}}],["this.snackbar.open('movie",{"_index":435,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["this.snackbar.open('user",{"_index":597,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(response",{"_index":617,"title":{},"body":{"components/UserRegistrationFormComponent.html":{}}}],["this.snackbar.open(result",{"_index":544,"title":{},"body":{"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.user",{"_index":572,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.birthday",{"_index":577,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.email",{"_index":576,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.favoritemovies.includes(m._id",{"_index":594,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.user.username",{"_index":574,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userdata.birthday",{"_index":584,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userdata.email",{"_index":575,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.userdata.username",{"_index":573,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["throwerror",{"_index":226,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["title",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{}}}],["togglefavorite",{"_index":349,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["toggles",{"_index":403,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["token",{"_index":246,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["tomovies",{"_index":473,"title":{},"body":{"components/TopBarComponent.html":{}}}],["top",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["topbarcomponent",{"_index":52,"title":{"components/TopBarComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["toprofile",{"_index":474,"title":{},"body":{"components/TopBarComponent.html":{}}}],["transition",{"_index":692,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["true",{"_index":377,"title":{},"body":{"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{}}}],["try",{"_index":327,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["tslib",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typed",{"_index":307,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["typedoc",{"_index":780,"title":{},"body":{"index.html":{}}}],["under",{"_index":794,"title":{},"body":{"index.html":{}}}],["up",{"_index":619,"title":{},"body":{"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["update",{"_index":604,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updated",{"_index":599,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["updateduser",{"_index":195,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["url",{"_index":229,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["usage",{"_index":750,"title":{},"body":{"index.html":{}}}],["use",{"_index":568,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["used",{"_index":410,"title":{},"body":{"components/MovieCardComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["user",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"injectables/FetchApiDataService.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["user's",{"_index":591,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user._id",{"_index":293,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["user.email",{"_index":602,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["user.favoritemovies",{"_index":417,"title":{},"body":{"components/MovieCardComponent.html":{}}}],["user.favoritemovies.indexof(movieid",{"_index":287,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["user.favoritemovies.pop",{"_index":282,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["user.favoritemovies.push(movieid",{"_index":267,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["user.favoritemovies.splice(index",{"_index":302,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["user.username",{"_index":264,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserProfileComponent.html":{}}}],["userdata",{"_index":551,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userdetails",{"_index":219,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userdetails).pipe",{"_index":244,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin",{"_index":174,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userlogin(userdetails",{"_index":217,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userloginformcomponent",{"_index":55,"title":{"components/UserLoginFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["username",{"_index":261,"title":{},"body":{"injectables/FetchApiDataService.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["userprofilecomponent",{"_index":59,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["userregistration",{"_index":175,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistration(userdetails",{"_index":220,"title":{},"body":{"injectables/FetchApiDataService.html":{}}}],["userregistrationformcomponent",{"_index":61,"title":{"components/UserRegistrationFormComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":243,"title":{},"body":{"injectables/FetchApiDataService.html":{},"index.html":{}}}],["using",{"_index":147,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["utc+0",{"_index":590,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["value",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["variable",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":805,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":802,"title":{},"body":{"properties.html":{}}}],["view",{"_index":745,"title":{},"body":{"index.html":{}}}],["void",{"_index":371,"title":{},"body":{"components/MovieCardComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{}}}],["web",{"_index":740,"title":{},"body":{"index.html":{}}}],["welcome",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"index.html":{}}}],["welcomepage",{"_index":492,"title":{},"body":{"components/TopBarComponent.html":{}}}],["welcomepagecomponent",{"_index":63,"title":{"components/WelcomePageComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/MovieCardComponent.html":{},"components/MovieInfoComponent.html":{},"components/TopBarComponent.html":{},"components/UserLoginFormComponent.html":{},"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{},"components/WelcomePageComponent.html":{},"coverage.html":{},"overview.html":{}}}],["white",{"_index":666,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["width",{"_index":637,"title":{},"body":{"components/WelcomePageComponent.html":{}}}],["you'll",{"_index":567,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserRegistrationFormComponent.html":{}}}],["yyyy",{"_index":586,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["zone.js",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        The root component class.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'myFlix-Angular-client'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    The title of the application.\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The root component class.\n * @class\n */\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n   /**\n   * The title of the application.\n   * @property {string}\n   */\n  \n  title = 'myFlix-Angular-client';\n}\n    \n\n    \n        .\n\n\n    \n\n    \n                \n                    ./app.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '.'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_declarations\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nMovieInfoComponent\n\nMovieInfoComponent\n\nAppModule -->\n\nMovieInfoComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AppComponent\n                        \n                        \n                            MovieCardComponent\n                        \n                        \n                            MovieInfoComponent\n                        \n                        \n                            TopBarComponent\n                        \n                        \n                            UserLoginFormComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserRegistrationFormComponent\n                        \n                        \n                            WelcomePageComponent\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        /**\n * Main module for the Angular application.\n * Defines components, modules, and routes for the application.\n * @module AppModule\n */\n\nimport { FormsModule } from '@angular/forms';\nimport { NgModule, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { AppRoutingModule } from './app.routes';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { UserRegistrationFormComponent } from './user-registration-form/user-registration-form.component';\nimport { UserLoginFormComponent } from './user-login-form/user-login-form.component';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MovieCardComponent } from './movie-card/movie-card.component';\nimport { RouterModule, Routes } from '@angular/router';\nimport { WelcomePageComponent } from './welcome-page/welcome-page.component';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MovieInfoComponent } from './movie-info/movie-info.component';\nimport { UserProfileComponent } from './user-profile/user-profile.component';\nimport { TopBarComponent } from './bar/bar.component';\n\n\n\nconst appRoutes: Routes = [\n  { path: 'welcome', component: WelcomePageComponent },\n  { path: 'movies', component: MovieCardComponent },\n  { path: 'profile', component: UserProfileComponent },\n  { path: '', redirectTo: 'welcome', pathMatch: 'prefix' },\n];\n\n/**\n * Main Angular module that declares components, imports modules, and provides routes.\n * @class AppModule\n */\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    UserRegistrationFormComponent,\n    UserLoginFormComponent,\n    MovieCardComponent,\n    WelcomePageComponent,\n    MovieInfoComponent,\n    UserProfileComponent,\n    TopBarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatButtonModule,\n    MatCardModule,\n    MatFormFieldModule,\n    MatDialogModule,\n    MatSnackBarModule,\n    FormsModule,\n    RouterModule.forRoot(appRoutes),\n    MatIconModule\n  ],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.routes.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        /**\n * Routing module for the Angular application.\n * Defines the application routes using the RouterModule.\n * @module AppRoutingModule\n */\n\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nexport const routes: Routes = [];\n\n/**\n * Angular module for routing in the application.\n * Imports the RouterModule with the defined routes and exports it.\n * @class AppRoutingModule\n */\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/FetchApiDataService.html":{"url":"injectables/FetchApiDataService.html","title":"injectable - FetchApiDataService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  FetchApiDataService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/fetch-api-data.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Injectable service class for making API requests.\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavoriteMovie\n                            \n                            \n                                deleteFavoriteMovie\n                            \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                    Private\n                                extractResponseData\n                            \n                            \n                                getAllMovies\n                            \n                            \n                                getFavoriteMovies\n                            \n                            \n                                getOneDirector\n                            \n                            \n                                getOneGenre\n                            \n                            \n                                getOneMovie\n                            \n                            \n                                getOneUser\n                            \n                            \n                                    Private\n                                handleError\n                            \n                            \n                                isFavoriteMovie\n                            \n                            \n                                    Public\n                                userLogin\n                            \n                            \n                                    Public\n                                userRegistration\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(http: HttpClient)\n                    \n                \n                        \n                            \n                                Defined in src/app/fetch-api-data.service.ts:26\n                            \n                        \n\n                \n                    \n                            Constructor of the service.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        http\n                                                  \n                                                        \n                                                                    HttpClient\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nInjected HttpClient module to make HTTP requests.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavoriteMovie\n                        \n                    \n                \n            \n            \n                \naddFavoriteMovie(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:141\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFavoriteMovie\n                        \n                    \n                \n            \n            \n                \ndeleteFavoriteMovie(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:198\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:184\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(updatedUser: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:169\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        extractResponseData\n                        \n                    \n                \n            \n            \n                \n                        \n                    extractResponseData(res: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:221\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                res\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAllMovies\n                        \n                    \n                \n            \n            \n                \ngetAllMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:52\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getFavoriteMovies\n                        \n                    \n                \n            \n            \n                \ngetFavoriteMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:125\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneDirector\n                        \n                    \n                \n            \n            \n                \ngetOneDirector(directorName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:80\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                directorName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneGenre\n                        \n                    \n                \n            \n            \n                \ngetOneGenre(genreName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:94\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                genreName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneMovie\n                        \n                    \n                \n            \n            \n                \ngetOneMovie(title: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:66\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getOneUser\n                        \n                    \n                \n            \n            \n                \ngetOneUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:108\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     Observable\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        handleError\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleError(error: HttpErrorResponse)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:226\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                error\n                                            \n                                                        HttpErrorResponse\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavoriteMovie\n                        \n                    \n                \n            \n            \n                \nisFavoriteMovie(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:163\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userLogin\n                        \n                    \n                \n            \n            \n                \n                        \n                    userLogin(userDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:44\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        userRegistration\n                        \n                    \n                \n            \n            \n                \n                        \n                    userRegistration(userDetails: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/fetch-api-data.service.ts:36\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userDetails\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Observable\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { catchError, map } from 'rxjs/operators';\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\n\n\n//Declaring the api url that will provide data for the client app\nconst apiUrl = 'https://movieapicf-30767e813dee.herokuapp.com/';\n\n/**\n * Injectable service class for making API requests.\n * @class FetchApiDataService\n * @constructor\n * @param {HttpClient} http - Injected HttpClient module to make HTTP requests.\n */\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class FetchApiDataService {\n/**\n   * Constructor of the service.\n   * @constructor\n   * @param {HttpClient} http - Injected HttpClient module to make HTTP requests.\n   */\n\n  constructor(private http: HttpClient) {\n  }\n // Making the api call for the user registration endpoint\n  public userRegistration(userDetails: any): Observable {\n    console.log(userDetails);\n    return this.http.post(apiUrl + 'users', userDetails).pipe(\n    catchError(this.handleError)\n    );\n  }\n\n// Making the api call for the user login endpoint\npublic userLogin(userDetails: any): Observable {\n  console.log(userDetails);\n  return this.http.post(apiUrl + 'login', userDetails).pipe(\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the get all movies endpoint\ngetAllMovies(): Observable {\n  const token = localStorage.getItem('token');\n  return this.http.get(apiUrl + 'movies', {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the get one movie endpoint\ngetOneMovie(title: string): Observable {\n  const token = localStorage.getItem('token');\n  return this.http.get(apiUrl + 'movies/' + title, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the get one director endpoint\ngetOneDirector(directorName: string): Observable {\n  const token = localStorage.getItem('token');\n  return this.http.get(apiUrl + 'movies/director/' + directorName, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the get one genre endpoint\ngetOneGenre(genreName: string): Observable {\n  const token = localStorage.getItem('token');\n  return this.http.get(apiUrl + 'movies/genre/' + genreName, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the get one user endpoint\ngetOneUser(): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  return user;\n  // const username = localStorage.getItem('username');\n  // const token = localStorage.getItem('token');\n  // return this.http.get(apiUrl + 'users/' + username, {\n  //   headers: new HttpHeaders(\n  //     {\n  //       Authorization: 'Bearer ' + token,\n  //     })\n  // }).pipe(\n  //   map(this.extractResponseData),\n  //   catchError(this.handleError)\n  // );\n}\n\n// Making the api call for the get favourite movies for a user endpoint\ngetFavoriteMovies(): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const token = localStorage.getItem('token');\n  return this.http.get(apiUrl + 'users/' + user.Username, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    map((data) => data.FavoriteMovies),\n    catchError(this.handleError)\n  );\n}\n\n\naddFavoriteMovie(movieId: string): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const token = localStorage.getItem('token');\n  user.FavoriteMovies.push(movieId);\n  localStorage.setItem('user', JSON.stringify(user));\n  return this.http.post(apiUrl + 'users/' + user.Username + '/movies/' + movieId, {}, {\n    headers: new HttpHeaders({\n      Authorization: 'Bearer ' + token,\n    }),\n    responseType: \"text\"\n  }).pipe(\n    map(this.extractResponseData),\n    catchError((error: HttpErrorResponse) => {\n      console.error('Error adding movie to favorites:', error);\n      // Roll back the local storage changes if the API call fails\n      user.FavoriteMovies.pop(); // Remove the last added movieId\n      localStorage.setItem('user', JSON.stringify(user));\n      return this.handleError(error);\n    })\n  );\n}\n\nisFavoriteMovie(movieId: string): boolean {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  return user.FavoriteMovies.indexOf(movieId) >= 0;\n}\n\n// Making the api call for the edit user endpoint\neditUser(updatedUser: any): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const token = localStorage.getItem('token');\n  return this.http.put(apiUrl + 'users/' + user.Username, updatedUser, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for the delete user endpoint\ndeleteUser(): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const token = localStorage.getItem('token');\n  return this.http.delete(apiUrl + 'users/' + user._id, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      })\n  }).pipe(\n    catchError(this.handleError)\n  );\n}\n\n// Making the api call for deleting a movie from the favorite movies endpoint\ndeleteFavoriteMovie(movieId: string): Observable {\n  const user = JSON.parse(localStorage.getItem('user') || '{}');\n  const token = localStorage.getItem('token');\n\n  const index = user.FavoriteMovies.indexOf(movieId);\n  console.log(index);\n  if (index > -1) { // only splice array when item is found\n    user.FavoriteMovies.splice(index, 1); // 2nd parameter means remove one item only\n  }\n  localStorage.setItem('user', JSON.stringify(user));\n  return this.http.delete(apiUrl + 'users/' + user.Username + '/movies/' + movieId, {\n    headers: new HttpHeaders(\n      {\n        Authorization: 'Bearer ' + token,\n      }),\n    responseType: \"text\"\n  }).pipe(\n    map(this.extractResponseData),\n    catchError(this.handleError)\n  );\n}\n\n// Non-typed response extraction\nprivate extractResponseData(res: any): any {\n  const body = res;\n  return body || {};\n}\n\nprivate handleError(error: HttpErrorResponse): any {\n    if (error.error instanceof ErrorEvent) {\n    console.error('Some error occurred:', error.error.message);\n    } \n     else if (error.error.errors) {\n      return throwError(() => new Error(error.error.errors[0].msg));\n    }\n    else {\n    console.error(\n        `Error Status code ${error.status}, ` +\n        `Error body is: ${error.error}`);\n    }\n    return throwError(() => new Error('Something bad happened; please try again later.'));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieCardComponent.html":{"url":"components/MovieCardComponent.html","title":"component - MovieCardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieCardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-card/movie-card.component.ts\n\n\n\n    \n        Description\n    \n    \n        Angular component decorator and metadata.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-card\n            \n\n\n\n            \n                styleUrls\n                ./movie-card.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-card.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                movies\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addFavorite\n                            \n                            \n                                getMovies\n                            \n                            \n                                isFavorite\n                            \n                            \n                                isFavoriteById\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDirector\n                            \n                            \n                                openGenre\n                            \n                            \n                                openMovieInfoDialog\n                            \n                            \n                                openSynopsis\n                            \n                            \n                                removeFavorite\n                            \n                            \n                                toggleFavorite\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteMovies\n                            \n                            \n                                movie\n                            \n                            \n                                onFavoriteToggle\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, snackBar: MatSnackBar, dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-card/movie-card.component.ts:29\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        favoriteMovies\n                    \n                \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/movie-card/movie-card.component.ts:27\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        movie\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/movie-card/movie-card.component.ts:25\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        onFavoriteToggle\n                    \n                \n                \n                    \n                        Type :         function\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/movie-card/movie-card.component.ts:26\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addFavorite\n                        \n                    \n                \n            \n            \n                \naddFavorite(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:149\n                        \n                    \n\n\n            \n                \n                        Adds a movie to the list of favorite movies.\nDisplays a notification on success or an error message on failure.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMovies\n                        \n                    \n                \n            \n            \n                \ngetMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:96\n                        \n                    \n\n\n            \n                \n                        Fetches all movies from the API.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavorite\n                        \n                    \n                \n            \n            \n                \nisFavorite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:141\n                        \n                    \n\n\n            \n                \n                        Checks if the current movie is in the list of favorite movies.\n\n\n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the movie is a favorite, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFavoriteById\n                        \n                    \n                \n            \n            \n                \nisFavoriteById(movieId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Checks if a movie with a given ID is in the list of favorite movies.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                movieId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \nTrue if the movie is a favorite, false otherwise.\n\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:40\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDirector\n                        \n                    \n                \n            \n            \n                \nopenDirector(name: string, bio: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:69\n                        \n                    \n\n\n            \n                \n                        Opens a dialog displaying director information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDirector name.\n\n\n                                            \n                                        \n                                        \n                                                bio\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nDirector biography.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openGenre\n                        \n                    \n                \n            \n            \n                \nopenGenre(name: string, description: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:53\n                        \n                    \n\n\n            \n                \n                        Opens a dialog displaying genre information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                name\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nGenre name.\n\n\n                                            \n                                        \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nGenre description.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openMovieInfoDialog\n                        \n                    \n                \n            \n            \n                \nopenMovieInfoDialog(title: string, content: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:111\n                        \n                    \n\n\n            \n                \n                        Opens a dialog displaying movie information.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                title\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie title.\n\n\n                                            \n                                        \n                                        \n                                                content\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie content.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSynopsis\n                        \n                    \n                \n            \n            \n                \nopenSynopsis(description: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Opens a dialog displaying movie synopsis.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                description\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie synopsis.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        removeFavorite\n                        \n                    \n                \n            \n            \n                \nremoveFavorite(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:165\n                        \n                    \n\n\n            \n                \n                        Removes a movie from the list of favorite movies.\nDisplays a notification on success or an error message on failure.\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    \nMovie ID.\n\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleFavorite\n                        \n                    \n                \n            \n            \n                \ntoggleFavorite()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/movie-card/movie-card.component.ts:120\n                        \n                    \n\n\n            \n                \n                        Toggles the favorite status of the movie.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/movie-card/movie-card.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, Input } from '@angular/core';\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MovieInfoComponent } from '../movie-info/movie-info.component';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n/**\n * Angular component decorator and metadata.\n * @component\n */\n\n@Component({\n  selector: 'app-movie-card',\n  templateUrl: './movie-card.component.html',\n  styleUrls: ['./movie-card.component.scss']\n})\nexport class MovieCardComponent {\n  @Input() movie: any;\n  @Input() onFavoriteToggle: (movieId: string) => void;\n  @Input() favoriteMovies: string[];\n  \n  movies: any[] = [];\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public snackBar: MatSnackBar,\n    public dialog: MatDialog\n  ) {\n    this.onFavoriteToggle = (movieId: string) => {};\n    this.favoriteMovies = [];\n  }\n\n  ngOnInit(): void {\n    this.getMovies();\n    const user: any = this.fetchApiData.getOneUser();\n    this.favoriteMovies = user.FavoriteMovies;\n    }\n\n  /**\n   * Opens a dialog displaying genre information.\n   * @param {string} name - Genre name.\n   * @param {string} description - Genre description.\n   */\n\n\n  openGenre(name: string, description: string): void {\n    this.dialog.open(MovieInfoComponent, {\n      data: {\n        title: name,\n        content: description\n      },\n    });\n  }\n\n\n  /**\n   * Opens a dialog displaying director information.\n   * @param {string} name - Director name.\n   * @param {string} bio - Director biography.\n   */\n\n  openDirector(name: string, bio: string): void {\n    this.dialog.open(MovieInfoComponent, {\n      data: {\n        title: name,\n        content: bio\n      },\n    });\n  }\n\n /**\n   * Opens a dialog displaying movie synopsis.\n   * @param {string} description - Movie synopsis.\n   */\n\n  openSynopsis(description: string): void {\n    this.dialog.open(MovieInfoComponent, {\n      data: {\n        title: 'Synopsis',\n        content: description\n      },\n    });\n  }\n\n /**\n   * Fetches all movies from the API.\n   */\n\n  getMovies(): void {\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.movies = resp;\n      console.log(this.movies);\n      return this.movies;\n    });\n  }\n\n\n  /**\n   * Opens a dialog displaying movie information.\n   * @param {string} title - Movie title.\n   * @param {string} content - Movie content.\n   */\n\n  openMovieInfoDialog(title: string, content: string): void {\n    this.dialog.open(MovieInfoComponent, {\n      data: { title, content },\n    });\n  }\n\n   /**\n   * Toggles the favorite status of the movie.\n   */\n  toggleFavorite(): void {\n    const movieId = this.movie._id;\n    const isFavorite = this.isFavorite();\n  \n    if (isFavorite) {\n      this.removeFavorite(movieId);\n      this.favoriteMovies = this.favoriteMovies.filter(id => id !== movieId);\n    } else {\n      this.addFavorite(movieId);\n      this.favoriteMovies.push(movieId);\n    }\n  \n    // Notify the parent component about the change\n    this.onFavoriteToggle(movieId);\n  }\n\n  /**\n   * Checks if the current movie is in the list of favorite movies.\n   * @returns {boolean} - True if the movie is a favorite, false otherwise.\n   */\n\n  isFavorite(): boolean {\n    return this.favoriteMovies.includes(this.movie._id);\n  }\n /**\n   * Adds a movie to the list of favorite movies.\n   * Displays a notification on success or an error message on failure.\n   * @param {string} id - Movie ID.\n   */\n addFavorite(id: string): void {\n  this.fetchApiData.addFavoriteMovie(id).subscribe(() => {\n    this.snackBar.open('Movie added to favorites.', 'OK', {\n      duration: 2000\n    });\n    this.favoriteMovies.push(id);\n  }, (error) => {\n    console.error('Error adding movie to favorites:', error);\n  });\n  }\n\n   /**\n   * Removes a movie from the list of favorite movies.\n   * Displays a notification on success or an error message on failure.\n   * @param {string} id - Movie ID.\n   */\n   removeFavorite(id: string): void {\n    this.fetchApiData.deleteFavoriteMovie(id).subscribe(\n      () => {\n        this.snackBar.open('Movie removed from favorites.', 'OK', { duration: 2000 });\n        this.favoriteMovies = this.favoriteMovies.filter((movieId) => id != movieId);\n      },\n      (error) => {\n        console.error('Error removing movie from favorites:', error);\n      }\n    );\n    }\n /**\n   * Checks if a movie with a given ID is in the list of favorite movies.\n   * @param {string} movieId - Movie ID.\n   * @returns {boolean} - True if the movie is a favorite, false otherwise.\n   */\n\n  isFavoriteById(movieId: string): boolean {\n    return this.favoriteMovies.includes(movieId);\n  }\n\n}\n\n    \n\n    \n        \n\n  \n    \n      {{movie.Title}}\n      Directed by: {{movie.Director.Name}}\n    \n     -->\n    \n      \n        info\n      \n      \n        person\n      \n      \n        description\n      \n      \n        favorite_border\n      \n      \n        favorite\n      \n    \n  \n\n    \n\n    \n                \n                    ./movie-card.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            {{movie.Title}}      Directed by: {{movie.Director.Name}}         -->                  info                    person                    description                    favorite_border                    favorite            '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieCardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/MovieInfoComponent.html":{"url":"components/MovieInfoComponent.html","title":"component - MovieInfoComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  MovieInfoComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/movie-info/movie-info.component.ts\n\n\n\n    \n        Description\n    \n    \n        MovieInfoComponent class.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-movie-info\n            \n\n\n\n            \n                styleUrls\n                ./movie-info.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./movie-info.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/movie-info/movie-info.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for MovieInfoComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nData injected into the component for display.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/movie-info/movie-info.component.ts:28\n                        \n                    \n\n            \n                \n                    - Data injected into the component for display.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, Inject } from '@angular/core';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n/**\n * MovieInfoComponent class.\n * @class\n */\n\n@Component({\n  selector: 'app-movie-info',\n  templateUrl: './movie-info.component.html',\n  styleUrls: ['./movie-info.component.scss']\n})\nexport class MovieInfoComponent {\n\n   /**\n   * Constructor for MovieInfoComponent.\n   * @constructor\n   * @param {any} data - Data injected into the component for display.\n   */\n  \n  constructor(@Inject(MAT_DIALOG_DATA) public data: any) { }\n}\n    \n\n    \n        {{data.title}}\n{{data.content}}\n\n  Close\n\n    \n\n    \n                \n                    ./movie-info.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '{{data.title}}{{data.content}}  Close'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'MovieInfoComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TopBarComponent.html":{"url":"components/TopBarComponent.html","title":"component - TopBarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TopBarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/bar/bar.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-top-bar\n            \n\n\n\n            \n                styleUrls\n                ./bar.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./bar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoggedIn\n                            \n                            \n                                showTopBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                logOut\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                toMovies\n                            \n                            \n                                toProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/bar/bar.component.ts:17\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        logOut\n                        \n                    \n                \n            \n            \n                \nlogOut()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/bar/bar.component.ts:42\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/bar/bar.component.ts:24\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toMovies\n                        \n                    \n                \n            \n            \n                \ntoMovies()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/bar/bar.component.ts:34\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toProfile\n                        \n                    \n                \n            \n            \n                \ntoProfile()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/bar/bar.component.ts:38\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoggedIn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/bar/bar.component.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTopBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/bar/bar.component.ts:17\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\n@Component({\n  selector: 'app-top-bar',\n  templateUrl: './bar.component.html',\n  styleUrls: ['./bar.component.scss']\n})\nexport class TopBarComponent implements OnInit {\n\n  isLoggedIn: boolean = false;\n  showTopBar: boolean = true;\n\n  constructor(private router: Router) {\n    // Check if the user is logged in\n    this.isLoggedIn = !!localStorage.getItem('token');\n  }\n\n  ngOnInit(): void {\n    // Subscribe to route changes\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        // Hide the top bar on the WelcomePage\n        this.showTopBar = !event.url.includes('/welcome');\n      }\n    });\n  }\n\n  toMovies(): void {\n    this.router.navigate(['movies']);\n  }\n\n  toProfile(): void {\n    this.router.navigate(['profile']);\n  }\n\n  logOut(): void {\n    this.router.navigate(['welcome']);\n    localStorage.clear();\n    this.isLoggedIn = false;\n  }\n}\n    \n\n    \n        \n    myFlix\n    \n    \n      person\n    \n    \n      logout\n    \n\n    \n\n    \n                \n                    ./bar.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    myFlix              person              logout    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TopBarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserLoginFormComponent.html":{"url":"components/UserLoginFormComponent.html","title":"component - UserLoginFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserLoginFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-login-form/user-login-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        UserLoginFormComponent class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-login-form\n            \n\n\n\n            \n                styleUrls\n                ./user-login-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-login-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                loginUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                loginData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-login-form/user-login-form.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor of UserLoginFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for making API calls.\n\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReference to the dialog.\n\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for displaying snack bar notifications.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular router service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        loginData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-login-form/user-login-form.component.ts:30\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        loginUser\n                        \n                    \n                \n            \n            \n                \nloginUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-login-form/user-login-form.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Function responsible for sending the user login form inputs to the backend.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-login-form/user-login-form.component.ts:52\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:43\n                        \n                    \n\n            \n                \n                    - Reference to the dialog.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:42\n                        \n                    \n\n            \n                \n                    - Service for making API calls.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-login-form/user-login-form.component.ts:44\n                        \n                    \n\n            \n                \n                    - Service for displaying snack bar notifications.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n// This import is used to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// This import brings in the API calls we created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\nimport { Router } from '@angular/router'; \n\n/**\n * UserLoginFormComponent class.\n * @class\n */\n\n@Component({\n  selector: 'app-user-login-form',\n  templateUrl: './user-login-form.component.html',\n  styleUrls: ['./user-login-form.component.scss']\n})\nexport class UserLoginFormComponent implements OnInit {\n\n  @Input() loginData = { Username: '', Password: '' };\n\n /**\n   * Constructor of UserLoginFormComponent.\n   * @constructor\n   * @param {FetchApiDataService} fetchApiData - Service for making API calls.\n   * @param {MatDialogRef} dialogRef - Reference to the dialog.\n   * @param {MatSnackBar} snackBar - Service for displaying snack bar notifications.\n   * @param {Router} router - Angular router service.\n   */\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router\n    ) {}\n\n    /**\n   * Lifecycle hook called after component initialization.\n   * @method\n   */\n  ngOnInit(): void {\n  }\n\n /**\n   * Function responsible for sending the user login form inputs to the backend.\n   * @method\n   */\n  loginUser(): void {\n    this.fetchApiData.userLogin(this.loginData).subscribe((result) => {\n      // Logic for a successful user login goes here! (To be implemented)\n      console.log(result);\n      localStorage.setItem('username', result.user.Username);\n      localStorage.setItem('token', result.token);\n      this.dialogRef.close(); // This will close the modal on success!\n      this.snackBar.open('Logged in', 'OK', {\n        duration: 2000\n      });\n\n      this.router.navigate(['movies']);\n\n    }, (result) => {\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Login\n  \n  \n    \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n    Login\n    \n  \n\n\n    \n\n    \n                \n                    ./user-login-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Login                                                                Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserLoginFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component class for user profile details and management.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteMovies\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                            \n                                user\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                getUser\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, snackBar: MatSnackBar, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-profile/user-profile.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor for UserProfileComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching API data.\n\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for displaying snack bar notifications.\n\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular router service.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-profile/user-profile.component.ts:36\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:104\n                        \n                    \n\n\n            \n                \n                        Deletes user account.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Edits user details.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUser\n                        \n                    \n                \n            \n            \n                \ngetUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Fetches user details and favorite movies.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-profile/user-profile.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after component initialization.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteMovies\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:48\n                        \n                    \n\n            \n                \n                    - Service for fetching API data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:50\n                        \n                    \n\n            \n                \n                    - Service for displaying snack bar notifications.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        user\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : {}\n                    \n                \n                    \n                        \n                                Defined in src/app/user-profile/user-profile.component.ts:33\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n// // You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// // This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n// This import brings in the API calls we created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\nimport { Router } from '@angular/router';\n\nimport { formatDate } from '@angular/common';\n\n/**\n * Component class for user profile details and management.\n * @class\n */\n\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.scss']\n})\n\nexport class UserProfileComponent implements OnInit {\n\n  user: any = {};\n  favoriteMovies: any[] = [];\n\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n\n  /**\n   * Constructor for UserProfileComponent.\n   * @constructor\n   * @param {FetchApiDataService} fetchApiData - Service for fetching API data.\n   * @param {MatSnackBar} snackBar - Service for displaying snack bar notifications.\n   * @param {Router} router - Angular router service.\n   */\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    //public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar,\n    private router: Router\n  ) { }\n\n   /**\n   * Lifecycle hook called after component initialization.\n   * @function\n   */\n\n  ngOnInit(): void {\n    this.getUser();\n  }\n\n  /**\n   * Fetches user details and favorite movies.\n   * @function\n   */\n  getUser(): void {\n    this.user = this.fetchApiData.getOneUser();\n    this.userData.Username = this.user.Username;\n    this.userData.Email = this.user.Email;\n    // this.user.Birthday comes in as ISOString format, like so: \"2011-10-05T14:48:00.000Z\"\n    this.userData.Birthday = formatDate(this.user.Birthday, 'yyyy-MM-dd', 'en-US', 'UTC+0');\n  \n    // Fetch favorite movies using the user's FavoriteMovies array\n    this.fetchApiData.getAllMovies().subscribe((resp: any) => {\n      this.favoriteMovies = resp.filter((m: { _id: any }) => this.user.FavoriteMovies.includes(m._id));\n    });\n  }\n  \n/**\n   * Edits user details.\n   * @function\n   */\n\n  editUser(): void {\n    this.fetchApiData.editUser(this.userData).subscribe((result) => {\n      localStorage.setItem('user', JSON.stringify(result));\n\n      this.snackBar.open('User successfully updated', 'OK', {\n        duration: 2000\n      });\n    }, (result) => {\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n\n  /**\n   * Deletes user account.\n   * @function\n   */\n  \n  deleteUser(): void {\n    this.fetchApiData.deleteUser().subscribe((result) => {\n      localStorage.clear();\n      this.router.navigate(['welcome']);\n      this.snackBar.open('User successfully deleted', 'OK', {\n        duration: 2000\n      });\n    }, (result) => {\n      this.snackBar.open(result, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n}\n    \n\n    \n        \n\n  Profile\n  Username: {{user.Username}}\n  Email: {{user.Email}}\n\n  Favorite Movies\n  \n    \n      folder -->\n       -->\n      {{movie.Title}}\n      {{movie.Director.Name}}\n    \n  \n\n  Update Profile\n  \n    \n      \n    \n    \n      \n    \n    \n      \n    \n  \n  \n    Update\n  \n\n  Remove account permanently\n\n    \n\n    \n                \n                    ./user-profile.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Profile  Username: {{user.Username}}  Email: {{user.Email}}  Favorite Movies            folder -->       -->      {{movie.Title}}      {{movie.Director.Name}}        Update Profile                                                    Update    Remove account permanently'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserRegistrationFormComponent.html":{"url":"components/UserRegistrationFormComponent.html","title":"component - UserRegistrationFormComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserRegistrationFormComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/user-registration-form/user-registration-form.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component decorator specifying selector, template, and styles.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-registration-form\n            \n\n\n\n            \n                styleUrls\n                ./user-registration-form.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./user-registration-form.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialogRef\n                            \n                            \n                                    Public\n                                fetchApiData\n                            \n                            \n                                    Public\n                                snackBar\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                userData\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fetchApiData: FetchApiDataService, dialogRef: MatDialogRef, snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:29\n                            \n                        \n\n                \n                    \n                            Constructor for UserRegistrationFormComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fetchApiData\n                                                  \n                                                        \n                                                                        FetchApiDataService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for fetching API data.\n\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nReference to the dialog.\n\n\n                                                        \n                                                \n                                                \n                                                        snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nService for displaying snack bar notifications.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        userData\n                    \n                \n                \n                    \n                        Type :     { Username: string; Password: string; Email: string; Birthday: string; }\n\n                    \n                \n                \n                    \n                        Default value : { Username: '', Password: '', Email: '', Birthday: '' }\n                    \n                \n                        \n                            \n                                    Defined in src/app/user-registration-form/user-registration-form.component.ts:29\n                            \n                        \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-registration-form/user-registration-form.component.ts:50\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook that is called after Angular has initialized all data-bound properties.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerUser\n                        \n                    \n                \n            \n            \n                \nregisterUser()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/user-registration-form/user-registration-form.component.ts:59\n                        \n                    \n\n\n            \n                \n                        Function responsible for sending the form inputs to the backend for user registration.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialogRef\n                        \n                    \n                \n            \n                \n                    \n                        Type :         MatDialogRef\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:41\n                        \n                    \n\n            \n                \n                    - Reference to the dialog.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        fetchApiData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FetchApiDataService\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:40\n                        \n                    \n\n            \n                \n                    - Service for fetching API data.\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        snackBar\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatSnackBar\n\n                    \n                \n                    \n                        \n                                Defined in src/app/user-registration-form/user-registration-form.component.ts:42\n                        \n                    \n\n            \n                \n                    - Service for displaying snack bar notifications.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, Input } from '@angular/core';\n\n// You'll use this import to close the dialog on success\nimport { MatDialogRef } from '@angular/material/dialog';\n\n// This import brings in the API calls we created in 6.2\nimport { FetchApiDataService } from '../fetch-api-data.service';\n\n// This import is used to display notifications back to the user\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n/**\n * Component decorator specifying selector, template, and styles.\n * @class\n */\n\n@Component({\n  selector: 'app-user-registration-form',\n  templateUrl: './user-registration-form.component.html',\n  styleUrls: ['./user-registration-form.component.scss']\n})\nexport class UserRegistrationFormComponent implements OnInit {\n  @Input() userData = { Username: '', Password: '', Email: '', Birthday: '' };\n\n   /**\n   * Constructor for UserRegistrationFormComponent.\n   * @constructor\n   * @param {FetchApiDataService} fetchApiData - Service for fetching API data.\n   * @param {MatDialogRef} dialogRef - Reference to the dialog.\n   * @param {MatSnackBar} snackBar - Service for displaying snack bar notifications.\n   */\n\n  constructor(\n    public fetchApiData: FetchApiDataService,\n    public dialogRef: MatDialogRef,\n    public snackBar: MatSnackBar) { }\n\n\n  /**\n   * Lifecycle hook that is called after Angular has initialized all data-bound properties.\n   * @function\n   */\n\n  ngOnInit(): void {\n  }\n\n\n  /**\n   * Function responsible for sending the form inputs to the backend for user registration.\n   * @function\n   */\n\n  registerUser(): void {\n    this.fetchApiData.userRegistration(this.userData).subscribe((response) => {\n      \n      console.log(response)\n      this.dialogRef.close(); // This will close the modal on success!\n      this.snackBar.open('User successfully registered', 'OK', {\n        duration: 2000\n      });\n    }, (response) => {\n      console.log(response)\n      this.snackBar.open(response, 'OK', {\n        duration: 2000\n      });\n    });\n  }\n\n}\n\n    \n\n    \n        \n  \n    Sign Up!\n  \n  \n    \n      \n        \n      \n      \n        \n      \n      \n        \n      \n      \n        \n      \n    \n  \n  \n    \n      Sign Up\n    \n  \n\n    \n\n    \n                \n                    ./user-registration-form.component.scss\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sign Up!                                                                                                          Sign Up      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserRegistrationFormComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/WelcomePageComponent.html":{"url":"components/WelcomePageComponent.html","title":"component - WelcomePageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  WelcomePageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/welcome-page/welcome-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        The WelcomePageComponent class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-welcome-page\n            \n\n\n\n            \n                styleUrls\n                ./welcome-page.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./welcome-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                dialog\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                            \n                                openUserLoginDialog\n                            \n                            \n                                openUserRegistrationDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/welcome-page/welcome-page.component.ts:23\n                            \n                        \n\n                \n                    \n                            Constructor of the WelcomePageComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAngular Material dialog service for opening dialogs.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:37\n                        \n                    \n\n\n            \n                \n                        Lifecycle hook called after the component has been initialized.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserLoginDialog\n                        \n                    \n                \n            \n            \n                \nopenUserLoginDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:56\n                        \n                    \n\n\n            \n                \n                        Opens the user login dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUserRegistrationDialog\n                        \n                    \n                \n            \n            \n                \nopenUserRegistrationDialog()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/welcome-page/welcome-page.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Opens the user registration dialog.\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        dialog\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatDialog\n\n                    \n                \n                    \n                        \n                                Defined in src/app/welcome-page/welcome-page.component.ts:31\n                        \n                    \n\n            \n                \n                    - Angular Material dialog service for opening dialogs.\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { UserLoginFormComponent } from '../user-login-form/user-login-form.component';\nimport { UserRegistrationFormComponent } from '../user-registration-form/user-registration-form.component';\nimport { MatDialog } from '@angular/material/dialog';\n\n\n/**\n * The WelcomePageComponent class.\n * @class\n */\n\n@Component({\n  selector: 'app-welcome-page',\n  templateUrl: './welcome-page.component.html',\n  styleUrls: ['./welcome-page.component.scss']\n})\nexport class WelcomePageComponent implements OnInit {\n\n    /**\n   * Constructor of the WelcomePageComponent.\n   * @constructor\n   * @param {MatDialog} dialog - Angular Material dialog service for opening dialogs.\n   */\n\n  constructor(public dialog: MatDialog) { }\n\n/**\n   * Lifecycle hook called after the component has been initialized.\n   * @lifecycle\n   */\n  ngOnInit(): void {\n  }\n\n  /**\n   * Opens the user registration dialog.\n   * @function\n   */\n\n  openUserRegistrationDialog(): void {\n    this.dialog.open(UserRegistrationFormComponent, {\n      width: '280px'\n    });\n  }\n\n  /**\n   * Opens the user login dialog.\n   * @function\n   */\n  \nopenUserLoginDialog(): void {\n    this.dialog.open(UserLoginFormComponent, {\n      width: '280px'\n    });\n  }\n}\n    \n\n    \n        \n    \n      Welcome to myFlix!\n    \n    \n      Sign Up\n    \n    \n      Login\n    \n  \n    \n\n    \n                \n                    ./welcome-page.component.scss\n                \n                .main-page {\n    background-color: rgba(0, 31, 63, 0.9); // Navy Background with 90% Opacity\n    padding: 50px;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n  \n    h1 {\n      font-size: 2.5em;\n      color: rgba(255, 255, 255, 0.9); // White Text Color with 90% Opacity\n      margin-bottom: 20px;\n    }\n  \n    button {\n      background-color: rgba(46, 110, 152, 0.8); // Sky Blue Button with 80% Opacity\n      color: rgba(255, 255, 255, 0.9); // White Text Color with 90% Opacity\n      margin: 15px; // Increased margin for better spacing\n      padding: 20px 40px; // Increased padding for a larger button\n      border: none;\n      border-radius: 8px; // Increased border-radius for a rounded appearance\n      cursor: pointer;\n      transition: background-color 0.3s ease;\n  \n      &:hover {\n        background-color: rgba(41, 128, 185, 0.8); // Darker Sky Blue on Hover with 80% Opacity\n      }\n    }\n  }\n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '          Welcome to myFlix!              Sign Up              Login      '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'MovieCardComponent', 'selector': 'app-movie-card'},{'name': 'MovieInfoComponent', 'selector': 'app-movie-info'},{'name': 'TopBarComponent', 'selector': 'app-top-bar'},{'name': 'UserLoginFormComponent', 'selector': 'app-user-login-form'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UserRegistrationFormComponent', 'selector': 'app-user-registration-form'},{'name': 'WelcomePageComponent', 'selector': 'app-welcome-page'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'WelcomePageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/bar/bar.component.ts\n            \n            component\n            TopBarComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            injectable\n            FetchApiDataService\n            \n                11 %\n                (2/17)\n            \n        \n        \n            \n                \n                src/app/fetch-api-data.service.ts\n            \n            variable\n            apiUrl\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/movie-card/movie-card.component.ts\n            \n            component\n            MovieCardComponent\n            \n                55 %\n                (11/20)\n            \n        \n        \n            \n                \n                src/app/movie-info/movie-info.component.ts\n            \n            component\n            MovieInfoComponent\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/user-login-form/user-login-form.component.ts\n            \n            component\n            UserLoginFormComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                72 %\n                (8/11)\n            \n        \n        \n            \n                \n                src/app/user-registration-form/user-registration-form.component.ts\n            \n            component\n            UserRegistrationFormComponent\n            \n                87 %\n                (7/8)\n            \n        \n        \n            \n                \n                src/app/welcome-page/welcome-page.component.ts\n            \n            component\n            WelcomePageComponent\n            \n                100 %\n                (6/6)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^17.1.0\n        \n            @angular/cdk : ^17.1.1\n        \n            @angular/common : ^17.1.0\n        \n            @angular/compiler : ^17.1.0\n        \n            @angular/core : ^17.1.0\n        \n            @angular/forms : ^17.1.0\n        \n            @angular/material : ^17.1.1\n        \n            @angular/platform-browser : ^17.1.0\n        \n            @angular/platform-browser-dynamic : ^17.1.0\n        \n            @angular/router : ^17.1.0\n        \n            rxjs : ~7.8.0\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.3\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nMyFlix Angular Client\nThis project is a web-based movie application built with Angular. It allows users to browse movies, view details, and manage their favorite movies.\nTable of Contents\n\nGetting Started\nPrerequisites\nInstallation\n\n\nUsage\nProject Structure\nDocumentation\nContributing\nLicense\n\nGetting Started\nPrerequisites\n\nNode.js: Make sure you have Node.js installed. You can download it here.\n\nInstallation\n\nClone the repository:\ngit clone https://github.com/alinatelychko/myFlix-Angular.git\ncd myFlix-Angular-client\n\nInstall dependencies:\n\n\nnpm install\n\nStart the application:\n\nng serve\nThe app will be available at http://localhost:4200/.\nUsage\nOpen your web browser and navigate to http://localhost:4200/.\nExplore movies, view details, and interact with the application.\nProject Structure\nThe project follows the structure below:\nmyFlix-Angular-client/\n|-- src/\n|   |-- app/\n|       |-- bar/\n|       |-- movie-card/\n|       |-- user-login-form/\n|       |-- movie-info/\n|       |-- user-registration-form/\n|       |-- welcome-page/\n|       |-- app.component.* \n|       |-- app.module.*\n|-- ...\nDocumentation\nThe documentation for this project is generated using Typedoc. To generate documentation, run the following command:\ntypedoc --out ./docs \nThis will create a docs folder with the generated documentation.\nContributing\nContributions are welcome! Feel free to submit issues or pull requests.\nLicense\nThis project is licensed under the MIT License.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nMovieCardComponent\n\nMovieCardComponent\n\nAppModule -->\n\nMovieCardComponent->AppModule\n\n\n\n\n\nMovieInfoComponent\n\nMovieInfoComponent\n\nAppModule -->\n\nMovieInfoComponent->AppModule\n\n\n\n\n\nTopBarComponent\n\nTopBarComponent\n\nAppModule -->\n\nTopBarComponent->AppModule\n\n\n\n\n\nUserLoginFormComponent\n\nUserLoginFormComponent\n\nAppModule -->\n\nUserLoginFormComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserRegistrationFormComponent\n\nUserRegistrationFormComponent\n\nAppModule -->\n\nUserRegistrationFormComponent->AppModule\n\n\n\n\n\nWelcomePageComponent\n\nWelcomePageComponent\n\nAppModule -->\n\nWelcomePageComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    8 Components\n                \n            \n        \n        \n            \n                \n                    \n                    1 Injectable\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        0 \n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            apiUrl   (src/.../fetch-api-data.service.ts)\n                        \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/fetch-api-data.service.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        apiUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'https://movieapicf-30767e813dee.herokuapp.com/'\n                    \n                \n\n\n        \n    \n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n   /**\n   * Array of providers for the application.\n   * Includes the router provider and animation-related providers.\n   * @property {Array}\n   */\n  \n  providers: [provideRouter(routes), provideAnimations(), provideAnimations(), provideAnimations(), provideAnimations(), provideAnimations()]\n}\n                    \n                \n\n            \n                \n                    Application configuration object.\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
